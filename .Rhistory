geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
summary(Logistic.1)
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
summary(Logistic.1)
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
summary(Logistic.2)
summary(Logistic.1)
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
summary(Logistic.2)
rocplot
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.8:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
View(tabla1)
library(kableExtra)
c
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"),
align="r") %>%
kable_minimal(full_width = F,  html_font = "Source Sans Pro")
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"),
align="r"
tabla1 <- tabla1 %>% kbl(caption="Distribución de las edades",
tabla1 <- tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"))
tabla1
tabla1 <- data %>%  group_by(Age = cut(Age_years, breaks = c(10,20,30,40,50,60,70,80))) %>% count(Age) %>% na.omit(tabla1)
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"))
tabla1
library(xtable)
xtable(tabla1, type = "latex")
tabla1 <- data %>%  group_by(Age = cut(Age_years, breaks = c(10,20,30,40,50,60,70,80))) %>% count(Age) %>% na.omit(tabla1)
tabla1 <- tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"))
add_footnote(tabla1, "Elaboración propia ")
tabla1 <- data %>%  group_by(Age = cut(Age_years, breaks = c(10,20,30,40,50,60,70,80))) %>% count(Age) %>% na.omit(tabla1)
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"), align = 'c')
install.packages("kableExtra")
View(tabla2)
View(tabla3)
View(tabla4)
View(tabla5)
tabla1 <- data %>% group_by(Account_Balance) %>% summarize(n =n())
library(readr)
library(dplyr)
library(tidyverse)
library(formattable)
library(kableExtra)
library(xtable)
tabla1 <- data %>% group_by(Account_Balance) %>% summarize(n =n())
View(tabla1)
tabla1 <- data %>% group_by(Account_Balance) %>% summarize(n =n())
tabla1 %>% kbl(caption="Distribución de la variable Próposito del Crédito",
format="latex",
col.names = c("Próposito","Cantidad de observaciones"), align = 'c')
View(tabla1)
tabla1 <- data %>% group_by(Purpose) %>% summarize(n =n())
tabla1 %>% kbl(caption="Distribución de la variable Próposito del Crédito",
format="latex",
col.names = c("Próposito","Cantidad de observaciones"), align = 'c')
library(copula)
library(VineCopula)
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
library(readr)
library(dplyr)
library(tidyverse)
library(formattable)
library(kableExtra)
library(xtable)
library(ggplot2)
library(hrbrthemes)
library(viridis)
r1 <- c("Metodológico", "Regresión logística", "Métodos de clasificación","An Introduction to Statistical
Learning","2021", "James et al.")
r2 <- c("Metodológico", "Regresión logística", "Regresión logística","La regresión logística","2002", "Horacio Chitarroni")
data.liter <- data.frame(rbind(r1,r2))
rownames(data.liter) <- c()
data.liter %>% kbl(caption="Clasificación Binaria",
format="latex",
row.names = NA,
col.names = c("Tipo de grupo","Nombre del grupo","Nombre del tema","Título","Año","Autor(es)"), align = 'c')%>%
kable_styling(latex_options = c("HOLD_position"),full_width = T)
r1 <- c("Metodológico", "Cópulas", "Grouped t-Copulas ","The Grouped t-copula with an Application to Credit Risk","2003", "Daul et al.")
r2 <- c("Metodológico", "Cópulas", "Vine Copulas","Application of Vine Copulas to Credit Portfolio
Risk Modeling","2016", "Geidosch & Fischer")
r3 <- c("Metodológico", "Cópulas", "Cópulas bivariadas","Modelado de parejas aleatorias usando cópulas","2009", "Escarela & Hernández")
data.liter <- data.frame(rbind(r1,r2,r3))
rownames(data.liter) <- c()
data.liter %>% kbl(caption="Cópulas",
format="latex",
row.names = NA,
col.names = c("Tipo de grupo","Nombre del grupo","Nombre del tema","Título","Año","Autor(es)"), align = 'c')%>%
kable_styling(latex_options = c("HOLD_position"),full_width = T)
library(readr)
library(dplyr)
library(tidyverse)
library(formattable)
library(kableExtra)
library(xtable)
library(ggplot2)
library(hrbrthemes)
library(viridis)
data <- read_csv("german.csv")
attach(data)
data <- data %>% mutate(Account_Balance = case_when(Account_Balance == 1 ~ 1,
Account_Balance == 2 ~ 2,
Account_Balance %in% c(3,4) ~ 3 ))
data <- data %>% mutate(Payment_Status_of_Previous_Credit = case_when(
Payment_Status_of_Previous_Credit %in% c(0,1) ~ 1,
Payment_Status_of_Previous_Credit %in% c(2,4) ~ 2,
Payment_Status_of_Previous_Credit == 3 ~ 3))
data <- data %>%  mutate(Value_Savings_Stocks = case_when(
Value_Savings_Stocks == 1 ~ 1,
Value_Savings_Stocks == 2 ~ 2,
Value_Savings_Stocks %in% c(3,4) ~ 3,
Value_Savings_Stocks == 5 ~ 4
))
data <- data %>% mutate(Length_of_current_employment = case_when(
Length_of_current_employment %in% c(1,2) ~ 1,
Length_of_current_employment == 3 ~ 2,
Length_of_current_employment == 4 ~ 3,
Length_of_current_employment == 5 ~ 4
))
data <- data %>% mutate(Sex_Marital_Status = case_when(
Sex_Marital_Status %in% c(1,2) ~ 1,
Sex_Marital_Status == 3 ~ 2,
Sex_Marital_Status == 4 ~ 3
))
data <- data %>%  mutate(No_of_Credits_at_this_Bank = case_when(
No_of_Credits_at_this_Bank == 1 ~ 1,
No_of_Credits_at_this_Bank %in% c(2,3,4) ~ 2
))
data <- data %>% mutate(Guarantors = case_when(
Guarantors == 1 ~ 1,
Guarantors == 2 ~ 2
))
data <- data %>% mutate(Concurrent_Credits = case_when(
Concurrent_Credits %in% c(1,2) ~ 1,
Concurrent_Credits == 3 ~ 2
))
data <- data %>%  mutate(Purpose = case_when(
Purpose %in% c(1,2) ~ 1,
Purpose %in% c(3,4,5,6) ~ 2,
Purpose == 10 ~ 3,
Purpose %in% c(7,8,9,0) ~ 4
))
data.test <- data %>% dplyr::select(Account_Balance, Payment_Status_of_Previous_Credit, Purpose, Value_Savings_Stocks, Length_of_current_employment, Instalment_per_cent, Sex_Marital_Status, Duration_in_Current_address, Type_of_apartment,  Most_valuable_available_asset, No_of_Credits_at_this_Bank, Guarantors, Occupation, Concurrent_Credits, No_of_dependents,Telephone,Foreign_Worker)
dim <- dim(data.test)[2]
chi <- c()
for (i in 1:dim) {
chi[i] <- chisq.test(table(Creditability, as.numeric(unlist(data.test[,i])) ))[3]
}
chi <- as.numeric(unlist(chi))
data.final <- data.test %>% dplyr::select(which(chi < 0.001)) %>% cbind(Credit_Amount, Age_years, Duration_of_Credit_monthly) %>%  relocate(Credit_Amount, Age_years, Duration_of_Credit_monthly)
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
# roc_score <- roc(actual, logit_P, plot = TRUE)
# plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(copula)
library(VineCopula)
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
#Primero definimos las pseudo-observaciones (de las probabilidades no hace falta pues ya estan entre 0 y 1)
pseudo.credit <- pobs(test$Credit_Amount)
pseudo.elegib <- pobs(logit_P_real)
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
#De esto obtenemos que el mejor ajuste se hace con una frank copula
#Sin embargo, vamos a estimar el parametro utilizando otro paquete
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
AIC(fit)
tau(frankCopula(param=coef(fit)))
library(copula)
library(VineCopula)
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
#Primero definimos las pseudo-observaciones (de las probabilidades no hace falta pues ya estan entre 0 y 1)
pseudo.credit <- pobs(test$Credit_Amount)
pseudo.elegib <- pobs(logit_P_real)
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
#De esto obtenemos que el mejor ajuste se hace con una frank copula
#Sin embargo, vamos a estimar el parametro utilizando otro paquete
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
AIC(fit)
tau(frankCopula(param=coef(fit)))
View(b)
tau(frankCopula(param=coef(fit)))
fit
AIC(fit)
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
AIC(fit)
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
logit_P_real
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
#Primero definimos las pseudo-observaciones (de las probabilidades no hace falta pues ya estan entre 0 y 1)
pseudo.credit <- pobs(test$Credit_Amount)
pseudo.elegib <- pobs(logit_P_real)
u <- as.matrix(data.frame(pseudo.credit, pseudo.elegib))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
AIC(fit)
tau(frankCopula(param=coef(fit)))
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
#summary(Logistic.1)
logit_P_real <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P_real > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
CM1 <- confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
library(copula)
library(VineCopula)
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
#Primero definimos las pseudo-observaciones (de las probabilidades no hace falta pues ya estan entre 0 y 1)
pseudo.credit <- pobs(test$Credit_Amount)
pseudo.elegib <- pobs(logit_P_real)
u <- as.matrix(data.frame(pseudo.credit, logit_P_real))
u.temp <- as.matrix(data.frame(pseudo.credit, pseudo.elegib))
b <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
b
b.temp <- BiCopSelect(pseudo.credit,logit_P_real,familyset = NA)
#De esto obtenemos que el mejor ajuste se hace con una frank copula
#Sin embargo, vamos a estimar el parametro utilizando otro paquete
fit <- fitCopula(frankCopula(dim=2), data = u)
fit
AIC(fit)
tau(frankCopula(param=coef(fit)))
b
#Le hacemos fit a varias copulas para comparar
normal.mdl <- fitCopula(normalCopula(dim=2),data=u)
tcop.mdl <- fitCopula(tCopula(dim=2), data=u)
clayton.mdl <- fitCopula(claytonCopula(dim=2), data = u)
#AIC de los modelos (entre mas pequenno mejor)
aic.df <- data.frame( Copula = c("Frank", "Normal", "t", "Clayton"), AIC = c(AIC(fit), AIC(normal.mdl), AIC(tcop.mdl), AIC(clayton.mdl))  )
#SN de los modelos (Test Cramer-von-Mises)
mm <- as.matrix(data.frame(test$Credit_Amount, logit_P_real))
#Gof test
gof.frank <- gofCopula(frankCopula(dim=2,param=-3.6), mm, N=50)
gof.normal <- gofCopula(normalCopula(dim=2), mm, N=50)
gof.t <- gofCopula(tCopula(dim=2,df.fixed = T), mm, N=50)
gof.clayton <- gofCopula(claytonCopula(dim = 2), mm, N=50)
sn.df <- data.frame(Copula = c("Frank", "Normal", "t", "Clayton"), S_n  = c(gof.frank$statistic, gof.normal$statistic, gof.t$statistic, gof.clayton$statistic))
#correlacion empirica entre las variables (Tau de Kendall)
corr.emp <- cor(test$Credit_Amount, logit_P_real, method = "kendall")
