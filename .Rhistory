roc_score=roc(test_data[,13], logit_P, plot = TRUE) #AUC score
(roc_score <- roc(actual, logit_P, plot = TRUE))
install.packages("verification")
library(verification)
roc.plot(actual,  logit_P)
install.packages("ROCit")
library(ROCit)
plot(rocit(score = logit_P, class = actual))
(roc_score <- roc(actual, logit_P, plot = TRUE))
df <- data.frame(logit_P, actual)
install.packages("plotROC")
library(plotROC)
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = TRUE)
rocplot
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = TRUE) + style_roc(theme = theme_grey) + geom_rocci(fill="pink")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = TRUE) + style_roc(theme = theme_bw) + geom_rocci(fill="pink")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) + style_roc(theme = theme_bw) + geom_rocci(fill="pink")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) + style_roc(theme = theme_bw)
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE)
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) + theme_bw()
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
plot(rocit(score = logit_P, class = actual))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline() +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = TRUE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
summary(Logistic.1)
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly)
summary(Logistic.2)
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly + Type_of_apartment)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly + Type_of_apartment)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly + Purpose)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
plot(rocit(score = logit_P, class = actual))
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = TRUE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed") +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline() +
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
summary(Logistic.1)
library(pROC)
library(caret)
library(verification)
library(ROCit)
library(plotROC)
indexes = sample(1:nrow(data), size=0.6*nrow(data))
train <- data[indexes,]
test <- data[-indexes,]
Logistic.1 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Type_of_apartment + Concurrent_Credits + Duration_of_Credit_monthly + Credit_Amount + Age_years)
summary(Logistic.1)
logit_P <- predict(Logistic.1, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
summary(Logistic.1)
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
summary(Logistic.2)
summary(Logistic.1)
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.7:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
summary(Logistic.2)
rocplot
Logistic.2 <- glm(Creditability ~ Account_Balance + Payment_Status_of_Previous_Credit + Value_Savings_Stocks + Length_of_current_employment + Most_valuable_available_asset + Concurrent_Credits + Duration_of_Credit_monthly)
summary(Logistic.2)
logit_P <- predict(Logistic.2, newdata = test, type = 'response')
logit_P <- ifelse(logit_P > 0.5, 1, 0)
actual <- as.numeric(unlist(test[,1]))
df <- data.frame(logit_P, actual)
confusionMatrix(as.factor(logit_P), as.factor(actual), mode = "everything", positive = "1")
(roc_score <- roc(actual, logit_P, plot = TRUE))
plot(rocit(score = logit_P, class = actual))
rocplot <- ggplot(df, aes(m = logit_P, d = actual)) +
geom_roc(n.cuts = 20, labels = FALSE) +
geom_abline(linetype = "dashed")+
theme_bw() +
labs(x = "1-Especificidad", y = "Sensibilidad", title = "Gráfico 2.8:  Curva ROC", caption = "Elaboración propia con datos extraídos de Kaggle")
rocplot
View(tabla1)
library(kableExtra)
c
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"),
align="r") %>%
kable_minimal(full_width = F,  html_font = "Source Sans Pro")
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"),
align="r"
tabla1 <- tabla1 %>% kbl(caption="Distribución de las edades",
tabla1 <- tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"))
tabla1
tabla1 <- data %>%  group_by(Age = cut(Age_years, breaks = c(10,20,30,40,50,60,70,80))) %>% count(Age) %>% na.omit(tabla1)
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"))
tabla1
library(xtable)
xtable(tabla1, type = "latex")
tabla1 <- data %>%  group_by(Age = cut(Age_years, breaks = c(10,20,30,40,50,60,70,80))) %>% count(Age) %>% na.omit(tabla1)
tabla1 <- tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"))
add_footnote(tabla1, "Elaboración propia ")
tabla1 <- data %>%  group_by(Age = cut(Age_years, breaks = c(10,20,30,40,50,60,70,80))) %>% count(Age) %>% na.omit(tabla1)
tabla1 %>% kbl(caption="Distribución de las edades",
format="latex",
col.names = c("Rango de edad","Cantidad de observaciones"), align = 'c')
install.packages("kableExtra")
View(tabla2)
View(tabla3)
View(tabla4)
View(tabla5)
tabla1 <- data %>% group_by(Account_Balance) %>% summarize(n =n())
library(readr)
library(dplyr)
library(tidyverse)
library(formattable)
library(kableExtra)
library(xtable)
tabla1 <- data %>% group_by(Account_Balance) %>% summarize(n =n())
View(tabla1)
tabla1 <- data %>% group_by(Account_Balance) %>% summarize(n =n())
tabla1 %>% kbl(caption="Distribución de la variable Próposito del Crédito",
format="latex",
col.names = c("Próposito","Cantidad de observaciones"), align = 'c')
View(tabla1)
tabla1 <- data %>% group_by(Purpose) %>% summarize(n =n())
tabla1 %>% kbl(caption="Distribución de la variable Próposito del Crédito",
format="latex",
col.names = c("Próposito","Cantidad de observaciones"), align = 'c')
